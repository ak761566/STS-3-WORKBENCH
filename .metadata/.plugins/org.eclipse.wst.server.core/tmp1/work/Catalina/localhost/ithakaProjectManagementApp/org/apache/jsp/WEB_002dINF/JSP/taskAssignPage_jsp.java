/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2018-12-28 14:44:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.JSP;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class taskAssignPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1545444973635L));
    _jspx_dependants.put("jar:file:/C:/Users/vff/Desktop/STS-3-WORKBENCH/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/ithakaProjectManagementApp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Task Assign</title>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write(".container {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 800px;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 5%;\r\n");
      out.write("\tborder-radius: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".left-col {\r\n");
      out.write("\twidth: 39%;\r\n");
      out.write("\theight: 90%;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tborder: 1px solid;\r\n");
      out.write("\tbackground-color: #f1f1f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".right-col {\r\n");
      out.write("\twidth: 1%;\r\n");
      out.write("\theight: 90%;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tborder: 1px solid;\r\n");
      out.write("\toverflow: auto;\r\n");
      out.write("\tbackground-color: #f1f1f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".center-col {\r\n");
      out.write("\twidth: 60%;\r\n");
      out.write("\theight: 90%;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tborder: 1px solid;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".footer {\r\n");
      out.write("\tmax-width: 100%;\r\n");
      out.write("\theight: 5%;\r\n");
      out.write("}\r\n");
      out.write("form{\r\n");
      out.write("\twidth: 40%;\r\n");
      out.write("\talign: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-div{\r\n");
      out.write("\twidth: 100%\r\n");
      out.write("\tpadding: 10%;\r\n");
      out.write("\tmargin:20px 0px 100px 200px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"navbar  navbar-inverse\">\r\n");
      out.write("                <div class=\"navbar-header\">\r\n");
      out.write("                    <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("                        <span class=\"icon-bar\"></span>\r\n");
      out.write("                        <span class=\"icon-bar\"></span>\r\n");
      out.write("                        <span class=\"icon-bar\"></span>                        \r\n");
      out.write("                    </button>\r\n");
      out.write("                    <a class=\"navbar-brand\" href=\"#\">Logo</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("                    <ul class=\"nav navbar-nav\">\r\n");
      out.write("                        <li class=\"active\"><a href=\"#\">Home</a></li>\r\n");
      out.write("                        <li><a href=\"#\">About</a></li>\r\n");
      out.write("                        <li><a href=\"#\">Projects</a></li>\r\n");
      out.write("                        <li><a href=\"#\">Contact</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                    <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("                         <li><a href=\"/ithakaProjectManagementApp/user/dashboard\"><span class=\"glyphicon glyphicon-log-in\">DashBoard</span></a></li>\r\n");
      out.write("                        <li><a href=\"/ithakaProjectManagementApp/logout\"><span class=\"glyphicon glyphicon-log-in\"></span>Logout</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("             <div class=\"left-col\">\r\n");
      out.write("             \t<h5>Stream Status</h5>\r\n");
      out.write("             \t<table class=\"table table-responsive\">\r\n");
      out.write("             \t\t<tr>\r\n");
      out.write("             \t\t\t<th>SETUP NO</th>\r\n");
      out.write("             \t\t\t<th>STREAM NAME</th>\r\n");
      out.write("             \t\t\t<th>USER NAME</th>\r\n");
      out.write("             \t\t\t<th>REMARK</th>\r\n");
      out.write("             \t\t\t<th>ACTIVITY</th>\r\n");
      out.write("             \t\t\t<th>STATUS</th>\r\n");
      out.write("             \t\t</tr>\r\n");
      out.write("             \t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("             \t</table>\r\n");
      out.write("              </div>     \r\n");
      out.write("              <div class=\"center-col\">\r\n");
      out.write("              <div class=\"form-div\">\r\n");
      out.write("              \t\t\t\t\t\t\t\t\t\r\n");
      out.write("              \t<form name='taskAssign' action=\"/ithakaProjectManagementApp/user/task/assign\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<div class=\"container\" id=\"frm\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("        \t\t\t\t\t<label for=\"inputUsername\">User Name</label>\r\n");
      out.write("        \t\t\t\t\t<input type=\"text\" class=\"form-control\" \r\n");
      out.write("        \t\t\t\t\tplaceholder=\"Enter Username\" \r\n");
      out.write("        \t\t\t\t\tid=\"inputUsername\" name=\"userName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loggedUserName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  required/>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("        \t\t\t\t\t<label for=\"inputUserId\">User Id</label>\r\n");
      out.write("        \t\t\t\t\t<input type=\"text\" class=\"form-control\" \r\n");
      out.write("        \t\t\t\t\tplaceholder=\"Enter UserId\" \r\n");
      out.write("        \t\t\t\t\tid=\"inputUserId\" name=\"userId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userInfo.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  required/>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("        \t\t\t\t\t<label for=\"inputSetupNo\">Setup Number</label>\r\n");
      out.write("        \t\t\t\t\t<input type=\"text\" class=\"form-control\" \r\n");
      out.write("        \t\t\t\t\tplaceholder=\"Setup Number\" \r\n");
      out.write("        \t\t\t\t\tid=\"inputSetupNo\" name=\"setupNo\"  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${setupNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  required/>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("        \t\t\t\t\t<label for=\"inputActivity\">Activity</label>\r\n");
      out.write("        \t\t\t\t\t<select name=\"activity\">\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"notStarted\">Not Started</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"transform\">Transform</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"profile\">Profile</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"quickTips\">Quick Tips</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"transform\">Transform</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"review-transform\">Review-Transform</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"review-profile\">Review-Profile</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"review-quickTips\">Review-QuickTips</option>\r\n");
      out.write("        \t\t\t\t\t\t<option value=\"review-transform\">Review-Transform</option>\r\n");
      out.write("        \t\t\t\t\t</select>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("        \t\t\t\t\t<label for=\"inputSetupNo\">Remark</label>\r\n");
      out.write("        \t\t\t\t\t<br/>\r\n");
      out.write("        \t\t\t\t\t<textarea rows=\"4\" cols=\"50\" name=\"activity_comment\"></textarea>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Assign</button>\r\n");
      out.write("    \t\t\t\t\t<!-- <button type=\"reset\" class=\"btn btn-primary\">Reset</button> -->\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"right-col \">\r\n");
      out.write("                    right side nav\r\n");
      out.write("             </div>\r\n");
      out.write("            <div class=\"footer\">\r\n");
      out.write("                footer\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("        \r\n");
      out.write("    </body>\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/JSP/taskAssignPage.jsp(100,15) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/JSP/taskAssignPage.jsp(100,15) '${listTransaction }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${listTransaction }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/JSP/taskAssignPage.jsp(100,15) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("transaction");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("             \t\t\t<tr>\r\n");
            out.write("             \t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.setupNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("             \t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.streamName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("             \t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.userName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("             \t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.activity_comment}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("             \t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.activity}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("             \t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.activity_status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("             \t\t\t</tr>\r\n");
            out.write("             \t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
